version: 2
jobs:
  test:
    docker:
      - image: unitedincome/std:latest
        auth:
          username: unitedincome
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-3-{{ checksum "yarn.lock" }}

      - run:
          name: Install Node dependencies
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
            yarn install

      - save_cache:
          key: dependency-cache-3-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ./node_modules

      - run:
          name: Linting Build
          command: yarn lint

      - run:
          name: Run unit tests
          command: |
            mkdir -p ./reports/tape
            yarn testCI

      - run:
          name: Push coverage report to CodeCov
          command: |
            echo $CODECOV_TOKEN
            bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN} -f coverage/lcov.info -F unit

      - store_test_results:
          path: ./reports
      - store_artifacts:
          path: ./reports
          destination: tests/

  visual:
    docker:
      - image: circleci/node:latest-browsers
    steps:
      - checkout

      - restore_cache:
          key: dependency-cache-3-{{ checksum "yarn.lock" }}

      - run:
          name: Install Node dependencies
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
            yarn install

      - save_cache:
          key: dependency-cache-3-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ./node_modules

      - run:
          name: Build package
          command: yarn build

      - run:
          name: Run Visual Regression Tests
          command: |
            - if [[ ! -z $CI_PULL_REQUEST ]] ; then yarn snapshot ; fi

  deploy:
    docker:
      - image: unitedincome/std:latest
        auth:
          username: unitedincome
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout

      - restore_cache:
          key: dependency-cache-3-{{ checksum "yarn.lock" }}

      - run:
          name: Install Node dependencies
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
            yarn install

      - save_cache:
          key: dependency-cache-3-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ./node_modules

      - run:
          name: Build package
          command: yarn build

      - run:
          name: Configure Git
          command: |
            git config user.email "engineering@unitedincome.com"
            git config user.name "United Income Engineering"

      - deploy:
          name: Publish to NPM
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              npm version patch -m "Bumping up version to %s [skip ci]"
              yarn build
              npm publish
              git push --set-upstream origin $CIRCLE_BRANCH
            fi

      - run:
          name: Publish Storybook
          command: yarn publishStorybook

workflows:
  version: 2
  test:
    jobs:
      - test
  deploy:
    jobs:
      - visual:
          filters:
            branches:
              only: develop
      - deploy:
          filters:
            branches:
              # The deploy job runs on both develop and master, except only the develop branch
              # runs the visual tests prior to deploying.
              only: 
                - master
                - develop