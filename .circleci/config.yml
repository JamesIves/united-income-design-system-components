version: 2.1

jobs:
  build:
    docker:
      - image: circleci/node:10.12
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-v2-{{ checksum "yarn.lock" }}

      - run:
          name: Install Node dependencies
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
            yarn install

      - save_cache:
          key: dependency-cache-v2-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ./node_modules

      - run:
          name: Linting Build
          command: yarn lint

      - run:
          name: Run unit tests
          command: |
            mkdir -p ./reports/tape
            yarn testCI

      - run:
          name: Verifying build
          command: NODE_ENV=production yarn build

      - run:
          name: Push coverage report to CodeCov
          command: |
            echo $CODECOV_TOKEN
            bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN} -f coverage/lcov.info -F unit

      - store_test_results:
          path: ./reports
      - store_artifacts:
          path: ./reports
          destination: tests/

      # Persist everything for StoryBook
      - persist_to_workspace:
          root: .
          paths:
            - .

  visual:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - attach_workspace:
          at: .

      - run:
          name: Run Visual Regression Tests
          command: yarn snapshot
  
  publish_storybook:
    docker:
      - image: circleci/node:10.12
    environment:
      NODE_ENV: production
    steps:
      - attach_workspace:
          at: .

      - run:
          name: Install dev deployment dependencies
          command: |
            sudo apt install python-dev python-pip
            sudo pip install awscli

      - run:
          name: Publish Storybook
          command: yarn publishStorybook

  publish_package:
    docker:
      - image: circleci/node:10.12
    environment:
      NODE_ENV: production
    steps:
      - attach_workspace:
          at: .

      - run:
          name: Configure Git
          command: |
            git config user.email "engineering@unitedincome.com"
            git config user.name "United Income Engineering"

      - deploy:
          name: Publish to NPM
          command: |
            npm version patch -m "Bumping up version to %s [skip ci]"
            npm publish
            git push --set-upstream origin $CIRCLE_BRANCH

workflows:
  components:
    jobs:
      - build
      - visual:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - publish_storybook:
          requires:
            - build
            - visual
          filters:
            branches:
              only: 
                - master
                - develop
      - publish_package:
          requires:
            - visual
          filters:
            branches:
              only: 
                - master
